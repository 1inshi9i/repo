--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -460,12 +460,12 @@ if(UNIX)
             COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/build/osx/localize/ ${WIZNOTE_RESOURCE_DIR})
 
     elseif(NOT APPLE)
-        add_executable(WizNote ${wiznote_SOURCES} ${wiznote_HEADERS} ${wiznote_FORM_HEADERS} ${wiznote_QM} ${wiznote_RC})
-        set_target_properties(${PROJECT_NAME} PROPERTIES AUTOMOC_MOC_OPTIONS "-DQ_OS_LINUX")
+        add_executable(wiznote ${wiznote_SOURCES} ${wiznote_HEADERS} ${wiznote_FORM_HEADERS} ${wiznote_QM} ${wiznote_RC})
+        set_target_properties(wiznote PROPERTIES AUTOMOC_MOC_OPTIONS "-DQ_OS_LINUX")
         set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS "-static-libstdc++ -static-libgcc")
         find_package(Qt5Svg)
 
-        install(TARGETS ${PROJECT_NAME} RUNTIME DESTINATION bin)
+        install(TARGETS wiznote RUNTIME DESTINATION bin)
         install(DIRECTORY ${CMAKE_SOURCE_DIR}/share/ DESTINATION share/wiznote PATTERN ".DS_Store" EXCLUDE)
         install(FILES ${wiznote_QM} DESTINATION share/wiznote/locales)
         install(FILES ${CMAKE_SOURCE_DIR}/LICENSE DESTINATION share/licenses/wiznote)
@@ -475,11 +475,11 @@ if(UNIX)
             install(FILES ${CMAKE_SOURCE_DIR}/build/common/logo/wiznote${ICON_SIZE}.png DESTINATION share/icons/hicolor/${ICON_SIZE}x${ICON_SIZE}/apps RENAME wiznote.png)
         endforeach(ICON_SIZE)
 
-        add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
+        add_custom_command(TARGET wiznote POST_BUILD
             COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/share/ ${CMAKE_BINARY_DIR}/share/wiznote)
 
         foreach(_file ${wiznote_QM})
-            add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
+            add_custom_command(TARGET wiznote POST_BUILD
                 COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_BINARY_DIR}/share/wiznote/locales/
                 COMMAND ${CMAKE_COMMAND} -E copy ${_file} ${CMAKE_BINARY_DIR}/share/wiznote/locales/)
         endforeach()
@@ -505,8 +504,8 @@ else()
     endforeach()
 endif()
 
-qt_use_modules(WizNote)
-qt_suppress_warnings(WizNote)
+qt_use_modules(wiznote)
+qt_suppress_warnings(wiznote)
 
 include_directories(
     ${CMAKE_CURRENT_SOURCE_DIR}
@@ -555,7 +554,7 @@ if(UNIX)
 			)
 		endif(APPSTORE_BUILD)
 	else(APPLE) #linux
-		target_link_libraries(${PROJECT_NAME}
+		target_link_libraries(wiznote
                         -lpthread
                         X11
 			quazip
--- a/src/share/WizEnc.cpp
+++ b/src/share/WizEnc.cpp
@@ -110,7 +110,7 @@ bool WizAES::encrypt(QDataStream* pStreamSrc, QDataStream* pStreamDest)
             memcpy(padding, pBufferSrc + prefix, pad);
         }
         memset(padding + pad, 16 - pad, 16 - pad);
-        enc.ProcessLastBlock(pBufferDest + prefix, padding, 16);
+        enc.ProcessLastBlock(pBufferDest + prefix, 16, padding, 16);
 
         if (pStreamDest->writeRawData((char *)pBufferDest, prefix + 16) == -1) {
             //throw std::exception("Failed to write data to stream!");
@@ -232,7 +232,7 @@ bool WizAES::decrypt(QDataStream* pStreamSrc, QDataStream* pStreamDest)
             return false;
         }
 
-        dec.ProcessLastBlock(padding, pBufferSrc, 16);
+        dec.ProcessLastBlock(padding, 16, pBufferSrc, 16);
         int pad = padding[15];
         if (pad > 16) {
             //throw std::exception("Failed to process last block!\nInvalid password?");
